/* This file is automatically generated by cliutil.exe */
using System;
using CooS.Formats.CLI.Metadata.Heaps;
using CooS.Formats.CLI.Metadata.Indexes;

namespace CooS.Formats.CLI.Metadata.Rows {

	public struct MethodSemanticsRow : IRow {

		public const TableId TableId = CooS.Formats.CLI.Metadata.TableId.MethodSemantics;

		public int Index;
		public MethodSemanticsAttributes Semantics;
		public MethodDefRowIndex Method;
		public HasSemanticsCodedIndex Association;

		public int RowIndex {
			get {
				return this.Index;
			}
			set {
				this.Index = value;
			}
		}

	}

	public struct MethodSemanticsRowIndex : IRowIndex {

		public readonly int Value;

		int IRowIndex.RawIndex {
			get {
				return this.Value;
			}
		}

		internal MethodSemanticsRowIndex(int value) {
			this.Value = value;
		}

		public static explicit operator MethodSemanticsRowIndex(RowIndex rowIndex) {
			return new MethodSemanticsRowIndex(rowIndex.Value);
		}

		public static implicit operator RowIndex(MethodSemanticsRowIndex rowIndex) {
			return new RowIndex(rowIndex.Value);
		}

	}

	internal class MethodSemanticsRowFactory : RowFactory<MethodSemanticsRow> {

		public MethodSemanticsRowFactory(TablesHeap heap) : base(heap) {
		}

		public override TableId TableId { get { return MethodSemanticsRow.TableId; } }

		public override int GetPhysicalSize() {
			return 0
				+ 2
				+ Heap.GetPhysicalSizeOfIndex(MethodDefRow.TableId)
				+ Heap.GetPhysicalSizeOfIndex(CodedIndexes.HasSemantics)
				;
		}

		public override MethodSemanticsRow Parse(byte[] buf, ref int position) {
			MethodSemanticsRow value;
			value.Index = 0;
			value.Semantics = (MethodSemanticsAttributes)Heap.ReadEnum16(buf, ref position);
			value.Method = (MethodDefRowIndex)Heap.ReadRowIndex(MethodDefRow.TableId, buf, ref position);
			value.Association = (HasSemanticsCodedIndex)Heap.ReadCodedIndex(CodedIndexes.HasSemantics, buf, ref position);
			return value;
		}

	}

}
